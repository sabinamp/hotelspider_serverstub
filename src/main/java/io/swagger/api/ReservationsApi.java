/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.0).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.CancelReservationRequest;
import io.swagger.model.InlineResponse200;
import io.swagger.model.Reservation;
import io.swagger.model.ReservationRequest;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-02-20T18:32:34.907Z")

@Api(value = "reservations", description = "the reservations API")
public interface ReservationsApi {

    @ApiOperation(value = "make a reservation", nickname = "reservationsHotelIdActionsBookPost", notes = "", response = InlineResponse200.class, authorizations = {
        @Authorization(value = "api_key")
    }, tags={ "Reservations", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "'Indicates that the reservation has been booked successfully'", response = InlineResponse200.class),
        @ApiResponse(code = 401, message = "Unauthorized - The supplied API key does not allow you to access this resource (hotel/room type/rate plan)"),
        @ApiResponse(code = 404, message = "Resource not found") })
    @RequestMapping(value = "/reservations/{hotelId}/actions/book",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<InlineResponse200> reservationsHotelIdActionsBookPost(@ApiParam(value = "ID of the hotel",required=true) @PathVariable("hotelId") String hotelId,@ApiParam(value = "Information about the reservation to be booked" ,required=true )  @Valid @RequestBody ReservationRequest reservation);


    @ApiOperation(value = "cancel a reservation", nickname = "reservationsHotelIdActionsCancelPost", notes = "", authorizations = {
        @Authorization(value = "api_key")
    }, tags={ "Reservations", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Indicates that the request has been processed successfully"),
        @ApiResponse(code = 401, message = "Unauthorized - The supplied API key does not allow you to access this resource (hotel/room type/rate plan)"),
        @ApiResponse(code = 404, message = "Resource not found") })
    @RequestMapping(value = "/reservations/{hotelId}/actions/cancel",
        method = RequestMethod.POST)
    ResponseEntity<Void> reservationsHotelIdActionsCancelPost(@ApiParam(value = "ID of the hotel",required=true) @PathVariable("hotelId") String hotelId,@ApiParam(value = "Information about the reservation to be cancelled" ,required=true )  @Valid @RequestBody CancelReservationRequest reservation);


    @ApiOperation(value = "get a specific reservation", nickname = "reservationsHotelIdLangReservationIdGet", notes = "", response = Reservation.class, authorizations = {
        @Authorization(value = "api_key")
    }, tags={ "Reservations", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns the reservation object", response = Reservation.class),
        @ApiResponse(code = 401, message = "Unauthorized - The supplied API key does not allow you to access this resource (hotel/room type/rate plan)"),
        @ApiResponse(code = 404, message = "Resource not found") })
    @RequestMapping(value = "/reservations/{hotelId}/{lang}/{reservationId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Reservation> reservationsHotelIdLangReservationIdGet(@ApiParam(value = "Language",required=true, allowableValues = "\"en\", \"fr\", \"de\", \"nl\", \"es\", \"it\"") @PathVariable("lang") String lang,@ApiParam(value = "ID of the hotel",required=true) @PathVariable("hotelId") String hotelId,@ApiParam(value = "ID of the reservation",required=true) @PathVariable("reservationId") String reservationId);

}
